[{"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reportWebVitals.js":"1","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/App.js":"2","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/index.js":"3","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reducers/mealReducer.js":"4","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsContainer.js":"5","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsPage.js":"6","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/fetchMeals.js":"7","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/MealList.js":"8","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/addMeal.js":"9","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/Meal.js":"10","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/UpdateMealForm.js":"11","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/NewMealForm.js":"12","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/updateMeal.js":"13","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/UpdateMealPage.js":"14","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/Navbar.js":"15","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/HomePage.js":"16","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/deleteMeal.js":"17"},{"size":362,"mtime":1606264647803,"results":"18","hashOfConfig":"19"},{"size":349,"mtime":1607893323322,"results":"20","hashOfConfig":"19"},{"size":985,"mtime":1606266753406,"results":"21","hashOfConfig":"19"},{"size":2065,"mtime":1607902244762,"results":"22","hashOfConfig":"19"},{"size":2487,"mtime":1607941251501,"results":"23","hashOfConfig":"19"},{"size":591,"mtime":1606320782893,"results":"24","hashOfConfig":"19"},{"size":762,"mtime":1606911707391,"results":"25","hashOfConfig":"19"},{"size":2924,"mtime":1607902409895,"results":"26","hashOfConfig":"19"},{"size":575,"mtime":1606275119248,"results":"27","hashOfConfig":"19"},{"size":1514,"mtime":1607889663499,"results":"28","hashOfConfig":"19"},{"size":4928,"mtime":1607891331345,"results":"29","hashOfConfig":"19"},{"size":3300,"mtime":1606324742178,"results":"30","hashOfConfig":"19"},{"size":777,"mtime":1607883212522,"results":"31","hashOfConfig":"19"},{"size":2117,"mtime":1606804836607,"results":"32","hashOfConfig":"19"},{"size":1150,"mtime":1607941040176,"results":"33","hashOfConfig":"19"},{"size":660,"mtime":1607895159397,"results":"34","hashOfConfig":"19"},{"size":1026,"mtime":1607901927484,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ogmlww",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reportWebVitals.js",[],["79","80"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/App.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/index.js",[],["81","82"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reducers/mealReducer.js",["83","84","85"],"export default function mealReducer(\n      state={}, action) {\n// debugger;\n    switch (action.type) {\n        case 'FETCH_MEALS':\n            // return state\n            console.log('action.payload', action.payload);\n            return {meals: action.payload}\n\n        case 'ADD_MEAL':\n            let mealId = action.payload.id\n            let newMeal = action.payload\n            // ! add new meal to list of meals\n            // console.log('mealReducer -> state.meals 2', state.meals);\n                return {...state.meals, meals: state.meals.concat(newMeal)}\n\n        case 'UPDATE_MEAL':\n            const payload = action.payload\n            const payloadId = action.payload.id\n            var currentMeal = state.meals.find(meal => meal.id == payloadId)\n            currentMeal = payload\n            const currentMeals = [...state.meals]\n            const updatedMeals = currentMeals[payloadId] = currentMeal\n            console.log('ðŸš€ ~ file: mealReducer.js ~ line 30 ~ currentMeal', currentMeal);\n            console.log('ðŸš€ ~ file: mealReducer.js ~ line 28 ~ state.meals  PART 1', state.meals);\n            console.log('ðŸš€ ~ file: mealReducer.js ~ line 31 ~ action.payload', action.payload);\n            console.log('ðŸš€ ~ file: mealReducer.js ~ line 33 ~ state.meals PART 2', state.meals);\n\n                return Object.assign({}, state, {meals: [currentMeals, updatedMeals]}\n      )\n\n        case 'DELETE_MEAL':\n            const filteredMeals = state.meals.filter(meal => meal.id !== action.payload.id);\n            return {...state, meals: filteredMeals}\n\n        case 'ADD_MEAL_RECIPE':\n            \n            let mealDrills =  state.meals.map(meal => {\n                if (meal.id == action.payload.id) {\n                    return action.payload\n                    } else {\n                        return meal\n                    }\n                  }\n                )\n            return {...state, meals: mealDrills}\n\n        default:\n            // console.log('accountReducer -> state', state);\n            return state\n    }\n\n}\n","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsContainer.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsPage.js",[],["86","87"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/fetchMeals.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/MealList.js",["88"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/addMeal.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/Meal.js",["89","90","91","92","93","94","95","96"],"import React, { Fragment, useState, useEffect } from 'react';\n// import {Redirect} from 'react-router-dom'\nimport { connect , useSelector } from 'react-redux'\nimport UpdateMealForm from '../forms/UpdateMealForm'\n\nconst Meal = (props) => {\n    if (props.meals){\n    const filtered = () => props.meals.filter((meal) => {\n        return meal.id == 2 \n    }\n    )\n            // console.log('ðŸš€ ~ file: Meal.js ~ line 35 ~ Meal ~ filtered', filtered);\n    \n    // console.log('ðŸš€ ~ file: Meal.js ~ line 14 ~ filtered ~ filtered', filtered);\n}\n    // filtered\n    return(\n    <Fragment>\n    {\n        props.meals ?\n        <p>\n        {/* name: {props.meals[props.match.params.id-1].name}\n        <br></br>\n        id: {props.meals[props.match.params.id-2].id}\n        <br></br> */}\n        MEAL:\n        {\n            props.meals.map(meal => \n        meal.id == props.match.params.id ? \n        <p>name: {meal.name} id: {meal.id} url: {meal.url}</p> \n        : null )\n        }\n        </p> \n        :\n        'no meal here bub'\n    }\n    {/* <p>{filtered.name}</p> */}\n    {props.meals ? \n    <UpdateMealForm currentMeal={props.meals.find(meal => \n        meal.id == props.match.params.id)}/>\n    : null }\n        </Fragment>\n    )\n}\n    // const mapStateToProps = (state, ownProps) => {\n    //     const { meals1 } = state\n    //     const { meals } = ownProps\n    //     return {\n    //         mealsArr: meals\n    //     }\n    // }\n    // export default connect(mapStateToProps)(Meal);\n    export default Meal;","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/UpdateMealForm.js",["97","98","99","100","101"],"import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\nimport Meal from '../components/Meal'\n//import {Route, Switch, useLocation, withRouter} from 'react-router-dom'\n// import { createBrowserHistory } from \"history\";\n\nimport {updateMeal} from '../actions/updateMeal'\n// import {addMeal} from '../actions/addMeal'\n// import MealsList from '../components/MealsList'\n\n\nclass UpdateMealForm extends Component {\n    constructor(props) {\n    super(props)\n    // this.props.meals = this.props.meals.bind(this)\n\n    // this.id = parseInt(window.location.href.replace(\"http://localhost:3001/meals/\", \"\"))\n    // // this.mealsList = this.props.meals\n    // this.meal = [this.props.meals].find(meal => meal.id == this.id)\n    // console.log('THIS.PROPS.MEALS',this.props)\n    // console.log('THIS.PROPS',this.props.meals)\n    // console.log('ðŸš€ ~ file: UpdateMealForm.js ~ line 21 ~ UpdateMealForm ~ constructor ~ this.meal', this.meal)\n    console.log('ðŸš€ ~ file: UpdateMealForm.js ~ line 25 ~ UpdateMealForm ~ constructor ~ props', props);\n    this.state = {\n        // meal:this.meal\n        id: parseInt(window.location.href.replace(\"http://localhost:3001/meals/\", \"\")),\n        name: props.currentMeal.name,\n        category:props.currentMeal.category,\n        url:props.currentMeal.url,\n        image_url:props.currentMeal.image_url,\n        cooking_time:props.currentMeal.cooking_time\n        }\n        // this.assignAndUpdateFields() \n    }\n\n    assignAndUpdateFields(){\n        var EditMealId = parseInt(window.location.href.replace(\"http://localhost:3001/meals/\", \"\"))\n        this.meal = this.meals.find(meal => meal.id == EditMealId)\n\n    }\n    \n    handleChange = (e) => {\n        this.setState({\n\n            [e.target.id]: e.target.value,\n            [e.target.name]: e.target.value,\n            [e.target.category]: e.target.value,\n            [e.target.url]: e.target.value,\n            [e.target.image_url]: e.target.value,\n            [e.target.cooking_time]: e.target.value\n        })\n    }\n\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        // debugger\n        this.props.updateMeal(this.state)\n        // alert(`${[this.state.name]} created!`)\n        // this.setState({\n        //     name: '',\n        //     category: '',\n        //     url: '',\n        //     image_url: '',\n        //     cooking_time: ''\n        // })\n    }\n\n    // const fillFormPlaceholders = () => {}\n// export default connect(mapStateToProps)(App);\n    render() {\n        // this.loadMeals\n        return (\n        <Fragment>\n        <h3>\n        UpdateMealForm\n        </h3>\n            {\n                this.props.meals ?\n                this.props.meals.find(meal => \n                    meal.id == this.props.match.params.id ? \n                    meal.name : null) \n                                : \"null\"}\n        \n        {/* <MealsList/> */}\n\n            {/* NewMealForm */}\n            <form id='update-meal-form' onSubmit={this.handleSubmit}>\n\n                <label> Meal Name:</label> \n                    <input type=\"text\" placeholder=\"hold-on\" value={this.state.name} name=\"name\" onChange={this.handleChange}/>\n                <label> Meal Category:</label> \n                    <input type=\"text\" placeholder='enter category...' value={this.state.category} name=\"category\" onChange={this.handleChange}/>\n                <label> Meal Url:</label> \n                    <input type=\"text\" placeholder='enter url...' value={this.state.url} name=\"url\" onChange={this.handleChange}/>\n                <label> Meal Image Url:</label> \n                    <input type=\"text\" placeholder='enter image url...' value={this.state.image_url} name=\"image_url\" onChange={this.handleChange}/>\n                <label> Meal Cooking Time:</label> \n                    <input type=\"text\" placeholder='enter cooking time...' value={this.state.cooking_time} name=\"cooking_time\" onChange={this.handleChange}/>\n                        <button type=\"submit\">Update Meal</button>\n                    {/* {console.log('NewMealForm -> render -> this.state.image_url', this.state.image_url)}\n                    {console.log('NewMealForm -> render -> this.state.category', this.state.category)} */}\n            </form>  \n            {/* <DrillsContainer/>       */}\n            {/* <Route exact path='/meals' render={(routerProps) => <MealsList {...routerProps} meals={this.props.meals}/>}/> */}\n            {/* <MealsList/> */}\n            {/* <MealsList props={this.props}/> */}\n        </Fragment>  \n        );\n    }\n}\n\n\nexport default connect(null, {updateMeal})(UpdateMealForm);\n// ! doesn't need mapStateToProps\n// ! doesn't need access to prop\n//  ! doesn;t need to know what is currently in store...only responsible for adding new meal and updating\n\n// ! instead of mapDispatchToProps we're calling {addRutine} and use the connect component","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/NewMealForm.js",["102","103"],"import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\n\nimport {addMeal} from '../actions/addMeal'\n// import MealsList from '../components/MealsList'\n\n\nclass NewMealForm extends Component {\n    state = {\n        name:'',\n        category:'',\n        url:'',\n        image_url:'',\n        cooking_time:''\n    }\n    \n    handleChange = (e) => {\n        // e.target.value\n        // console.log('NewMealForm -> e.target.value', e.target.value);\n        this.setState({\n            [e.target.name]: e.target.value,\n            [e.target.category]: e.target.value,\n            [e.target.url]: e.target.value,\n            [e.target.image_url]: e.target.value,\n            [e.target.cooking_time]: e.target.value\n        })\n        // console.log('NewMealForm -> e.target.image_url', e.target.image_url);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // debugger\n        this.props.addMeal(this.state)\n        // alert(`${[this.state.name]} created!`)\n        this.setState({\n      name: '',\n      category: '',\n      url: '',\n      image_url: '',\n      cooking_time: ''\n      })\n    }\n\n// export default connect(mapStateToProps)(App);\n    render() {\n        return (\n        <Fragment>\n        {/* <MealsList/> */}\n\n            {/* NewMealForm */}\n            <form id='new-meal-form' onSubmit={this.handleSubmit}>\n\n                <label> Meal Name:</label> \n                    <input type=\"text\" placeholder='enter meal name...' value={this.state.name} name=\"name\" onChange={this.handleChange}/>\n                <label> Meal Category:</label> \n                    <input type=\"text\" placeholder='enter category...' value={this.state.category} name=\"category\" onChange={this.handleChange}/>\n                <label> Meal Url:</label> \n                    <input type=\"text\" placeholder='enter url...' value={this.state.url} name=\"url\" onChange={this.handleChange}/>\n                <label> Meal Image Url:</label> \n                    <input type=\"text\" placeholder='enter image url...' value={this.state.image_url} name=\"image_url\" onChange={this.handleChange}/>\n                <label> Meal Cooking Time:</label> \n                    <input type=\"text\" placeholder='enter cooking time...' value={this.state.cooking_time} name=\"cooking_time\" onChange={this.handleChange}/>\n                        <button type=\"submit\">Create Meal</button>\n                    {/* {console.log('NewMealForm -> render -> this.state.image_url', this.state.image_url)}\n                    {console.log('NewMealForm -> render -> this.state.category', this.state.category)} */}\n            </form>  \n            {/* <DrillsContainer/>       */}\n            {/* <Route exact path='/meals' render={(routerProps) => <MealsList {...routerProps} meals={this.props.meals}/>}/> */}\n            {/* <MealsList/> */}\n            {/* <MealsList props={this.props}/> */}\n        </Fragment>  \n        );\n    }\n}\n\n\nexport default connect(null, {addMeal})(NewMealForm);\n// ! doesn't need mapStateToProps\n// ! doesn't need access to prop\n//  ! doesn;t need to know what is currently in store...only responsible for adding new meal and updating\n\n// ! instead of mapDispatchToProps we're calling {addRutine} and use the connect component",["104","105"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/updateMeal.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/UpdateMealPage.js",["106","107","108","109","110"],"import React, { Fragment, useState, useEffect } from 'react';\nimport UpdateMealForm from '../forms/UpdateMealForm'\nimport Meal from './Meal'\n\nconst UpdateMealPage = (props) => {\n    var [state, setState] = useState([])\n    // var [name, setName] = useState()\n        useEffect(() => {\n                setState(props.meals);\n            }, [props.meals]);\n\n    if (props.meals) {\n    // const [state, setState] = useState([])\n        // useEffect(() => {\n                // setState(props.meals);\n            // }, [props.meals]);\n\n    var mealId = parseInt(window.location.href.replace(\"http://localhost:3001/meals/\", \"\"))\n\n    // var meal = props.meals.filter(meal => meal.id == mealId\n    var meal = props.meals.find(meal => meal.id == mealId)\n    // var meal = props.meals.filter(meal => meal.id == props.match.params.id)[0]\n        // [0]\n\n    // const [meal, setMeal] = useState(state.meals[mealId])\n    // var [name, setName] = useState()\n    // var [category, setCategory] = useState()\n    // var [url, setUrl] = useState()\n    // const meals = props.meals\n\n    var mealInfo = (        \n    <div>\n    </div>\n    \n\n    )\n\n    // useEffect(() => {\n                // setMeal(state.meals.find(meal => meal.id == mealId));\n            // }, [props.meals]);\n\n    // console.log('ðŸš€ ~ file: MealEdit.js ~ line 9 ~ MealEdit ~ id', mealId);\n\n    // console.log('ðŸš€ ~ file: MealEdit.js ~ line 12 ~ MealEdit ~ props.meals', props.meals);\n    // var meal = props.meals.find(meal => meal.id == mealId)\n    // console.log('ðŸš€ ~ file: MealEdit.js ~ line 8 ~ MealEdit ~ meal', meal);\n    // console.log('ðŸš€ ~ file: MealEdit.js ~ line 18 ~ MealEdit ~ meals', meals);\n    // console.log('ðŸš€ ~ file: MealEdit.js ~ line 18 ~ MealEdit ~ state', state);\n    }\n    var handleEdit = () => {\n\n    }\nreturn(\n    <Fragment>\n    <h3>\n    UpdateMealPage\n    </h3>\n\n        <UpdateMealForm meals={props.meals} meal={meal}/>\n        {/* {state ? <section>{mealInfo}</section> : <h1>No Meal Loaded. Check context.</h1>} */}\n        {/* <Meal meals={props.meals} meal={meal}/> */}\n    </Fragment>\n)\n}\n\nexport default UpdateMealPage;","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/Navbar.js",["111"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/HomePage.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/deleteMeal.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":11,"column":17,"nodeType":"120","messageId":"121","endLine":11,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":20,"column":64,"nodeType":"124","messageId":"125","endLine":20,"endColumn":66},{"ruleId":"122","severity":1,"message":"123","line":39,"column":29,"nodeType":"124","messageId":"125","endLine":39,"endColumn":31},{"ruleId":"112","replacedBy":"126"},{"ruleId":"114","replacedBy":"127"},{"ruleId":"122","severity":1,"message":"123","line":44,"column":62,"nodeType":"124","messageId":"125","endLine":44,"endColumn":64},{"ruleId":"118","severity":1,"message":"128","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"129","line":1,"column":37,"nodeType":"120","messageId":"121","endLine":1,"endColumn":46},{"ruleId":"118","severity":1,"message":"130","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"131","line":3,"column":20,"nodeType":"120","messageId":"121","endLine":3,"endColumn":31},{"ruleId":"118","severity":1,"message":"132","line":8,"column":11,"nodeType":"120","messageId":"121","endLine":8,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":9,"column":24,"nodeType":"124","messageId":"125","endLine":9,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":29,"column":17,"nodeType":"124","messageId":"125","endLine":29,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":40,"column":17,"nodeType":"124","messageId":"125","endLine":40,"endColumn":19},{"ruleId":"118","severity":1,"message":"133","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"134","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":22},{"ruleId":"118","severity":1,"message":"135","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":12},{"ruleId":"122","severity":1,"message":"123","line":39,"column":53,"nodeType":"124","messageId":"125","endLine":39,"endColumn":55},{"ruleId":"122","severity":1,"message":"123","line":82,"column":29,"nodeType":"124","messageId":"125","endLine":82,"endColumn":31},{"ruleId":"118","severity":1,"message":"133","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"134","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":22},{"ruleId":"112","replacedBy":"136"},{"ruleId":"114","replacedBy":"137"},{"ruleId":"118","severity":1,"message":"135","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":12},{"ruleId":"118","severity":1,"message":"138","line":6,"column":10,"nodeType":"120","messageId":"121","endLine":6,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":21,"column":49,"nodeType":"124","messageId":"125","endLine":21,"endColumn":51},{"ruleId":"118","severity":1,"message":"139","line":31,"column":9,"nodeType":"120","messageId":"121","endLine":31,"endColumn":17},{"ruleId":"118","severity":1,"message":"140","line":50,"column":9,"nodeType":"120","messageId":"121","endLine":50,"endColumn":19},{"ruleId":"118","severity":1,"message":"133","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],"no-unused-vars","'mealId' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["141"],["142"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'connect' is defined but never used.","'useSelector' is defined but never used.","'filtered' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Meal' is defined but never used.",["141"],["142"],"'state' is assigned a value but never used.","'mealInfo' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]