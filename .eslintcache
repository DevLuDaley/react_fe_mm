[{"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reportWebVitals.js":"1","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/App.js":"2","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/index.js":"3","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reducers/mealReducer.js":"4","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsContainer.js":"5","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsPage.js":"6","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/fetchMeals.js":"7","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/MealList.js":"8","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/addMeal.js":"9","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/Meal.js":"10","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/UpdateMealForm.js":"11","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/NewMealForm.js":"12","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/updateMeal.js":"13","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/UpdateMealPage.js":"14"},{"size":362,"mtime":1606264647803,"results":"15","hashOfConfig":"16"},{"size":292,"mtime":1606267948297,"results":"17","hashOfConfig":"16"},{"size":985,"mtime":1606266753406,"results":"18","hashOfConfig":"16"},{"size":3130,"mtime":1606760181349,"results":"19","hashOfConfig":"16"},{"size":2190,"mtime":1606804529277,"results":"20","hashOfConfig":"16"},{"size":591,"mtime":1606320782893,"results":"21","hashOfConfig":"16"},{"size":766,"mtime":1606757500474,"results":"22","hashOfConfig":"16"},{"size":848,"mtime":1606328962385,"results":"23","hashOfConfig":"16"},{"size":575,"mtime":1606275119248,"results":"24","hashOfConfig":"16"},{"size":4890,"mtime":1606796022323,"results":"25","hashOfConfig":"16"},{"size":4398,"mtime":1606804829244,"results":"26","hashOfConfig":"16"},{"size":3300,"mtime":1606324742178,"results":"27","hashOfConfig":"16"},{"size":777,"mtime":1606757450436,"results":"28","hashOfConfig":"16"},{"size":2117,"mtime":1606804836607,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ogmlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reportWebVitals.js",[],["64","65"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/App.js",[],["66","67"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/index.js",[],["68","69"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/reducers/mealReducer.js",["70","71","72","73"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsContainer.js",["74"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/containers/MealsPage.js",[],["75","76"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/fetchMeals.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/MealList.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/addMeal.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/Meal.js",["77","78","79","80","81","82","83","84","85","86","87","88"],"import React, { Fragment, useState, useEffect } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport UpdateMealForm from '../forms/UpdateMealForm'\n\n// import NewMealRecipeForm from '../components/NewMealRecipeForm'\n\nconst Meal = (props) => {\n\n    var [name, setName] = useState()\n    var [id, setId] = useState(props.id)\n    var [category, setCategory] = useState()\n    var [url, setUrl] = useState()\n\n    useEffect(() => {\n                setName(props.name);\n            }, [props.name]);\n            \n\n    // console.log('Meal -> props.meals1', props.meals);\n    // console.log('props here =>',props.meal.id);\n    // console.log(`props`, props.id);\n    // let meal = props.meals[props.match.params.id -1]\n    // console.log('Meal -> props1', props);\n    // console.log('Meal -> props1', meals)\n    if (props.meals) {\n    console.log('Meal -> props.meals2', props.meals);\n\n        // var meal = props.meals.filter(meal => meal.id == props.match.params.id)[0]\n            var mealId = parseInt(window.location.href.replace(\"http://localhost:3001/meals/\", \"\"))\n\n    // var meal = props.meals.filter(meal => meal.id == mealId\n            var meal = props.meals.find(meal => meal.id == mealId)\n        // [0]\n        \n        // console.log('Meal -> props.match.params.id)[0]', props.match.params.id[0])\n        // var mealID = {meal.id}\n        // console.log('Meal -> props.match.params.id', props.match.params.id);\n        const handleEdit = () => {\n            // `/meals/${id}/edit`\n        }\n        // console.log('Meal -> meal.id', meal.id);\n        var mealInfo =( \n                        <div>\n                    <h1> {meal.name} \n                    </h1>\n                        <ul key={meal.id} style={{listStyleType: 'none' }} contentEditable=\"false\">\n                                ID: <li contentEditable=\"false\">{meal.id}</li>\n                                Category: <li>{meal.category}</li>\n                                Url: <li>{meal.url}</li>\n                                Image Url:<li>{meal.image_url}</li>\n                                Cooking Time<li>{meal.cooking_time} minutes </li>\n                        </ul>\n                        <button onClick={handleEdit}>Edit</button>\n\n                    <h3 className='recipes-list'>Recipes List\n                    {/* <button>\n                        {meal.recipes ? meal.recipes.length : null}\n                    </button> */}\n                    </h3>\n                </div>\n            )\n\n        var mealInfo2 =( \n                        <div>\n                    <h1> {meal.name} \n                    </h1>\n                        <form key={meal.id}>\n                                ID: <p>{meal.id}</p>\n                                Category: <p>{meal.category}</p>\n                                Url: <p>{meal.url}</p>\n                                Image Url:<p>{meal.image_url}</p>\n                                Cooking Time<p>{meal.cooking_time} minutes </p>\n                        </form>\n                        <button onClick={handleEdit}>Edit</button>\n\n                    <h3 className='recipes-list'>Recipes List\n                    {/* <button>\n                        {meal.recipes ? meal.recipes.length : null}\n                    </button> */}\n                    </h3>\n                </div>\n            )\n\n        var mealInfo1 =( \n                <div>\n                    <h1> \n                        {meal.name} \n                        <button a href={`http://localhost:3001/meals/${id}/edit`}>Edit Meal</button>\n                    </h1>\n                    <ul id='update-meal-form' onSubmit={console.log(\"SUBMITTED\")}>\n                        ID: <p>{meal.id}</p>\n                        Category: <p>{meal.category}</p>\n                        Url: <p>{meal.url}</p>\n                        Image Url:<p>{meal.image_url}</p>\n                        Cooking Time<p>{meal.cooking_time} minutes </p>\n                    </ul>\n                    <h3 className='recipes-list'>Recipes List\n                    {/* <button>\n                        {meal.recipes ? meal.recipes.length : null}\n                    </button> */}\n                    </h3>\n                </div>\n            )\n    }\n\n    \n\nvar handleEdit = () => {\n    console.log(\"HANDLING THE EDIT LU\")\n    // console.log('ðŸš€ ~ file: Meal.js ~ line 73 ~ Meal ~ mealInfo.props', mealInfo.props.children);\n}\n\n\n\n    // console.log(`CONSOLED PROPS from MEAL.JS`, props.meals);\n    return(\n        <Fragment>\n            Meal Component\n            Meal\n            <li className='meal-component' key={props.meal} style={{listStyleType: 'none'}}>\n                {/* {meal ? null : <Redirect to='/meals'/>} */} \n                {\n                    meal ? mealInfo1 : <h1>No Meal Loaded. Check api connection.</h1>\n                }\n            </li>\n        </Fragment>\n    )\n}\nexport default Meal","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/UpdateMealForm.js",["89","90","91","92"],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/forms/NewMealForm.js",["93","94"],"import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\n\nimport {addMeal} from '../actions/addMeal'\n// import MealsList from '../components/MealsList'\n\n\nclass NewMealForm extends Component {\n    state = {\n        name:'',\n        category:'',\n        url:'',\n        image_url:'',\n        cooking_time:''\n    }\n    \n    handleChange = (e) => {\n        // e.target.value\n        // console.log('NewMealForm -> e.target.value', e.target.value);\n        this.setState({\n            [e.target.name]: e.target.value,\n            [e.target.category]: e.target.value,\n            [e.target.url]: e.target.value,\n            [e.target.image_url]: e.target.value,\n            [e.target.cooking_time]: e.target.value\n        })\n        // console.log('NewMealForm -> e.target.image_url', e.target.image_url);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // debugger\n        this.props.addMeal(this.state)\n        // alert(`${[this.state.name]} created!`)\n        this.setState({\n      name: '',\n      category: '',\n      url: '',\n      image_url: '',\n      cooking_time: ''\n      })\n    }\n\n// export default connect(mapStateToProps)(App);\n    render() {\n        return (\n        <Fragment>\n        {/* <MealsList/> */}\n\n            {/* NewMealForm */}\n            <form id='new-meal-form' onSubmit={this.handleSubmit}>\n\n                <label> Meal Name:</label> \n                    <input type=\"text\" placeholder='enter meal name...' value={this.state.name} name=\"name\" onChange={this.handleChange}/>\n                <label> Meal Category:</label> \n                    <input type=\"text\" placeholder='enter category...' value={this.state.category} name=\"category\" onChange={this.handleChange}/>\n                <label> Meal Url:</label> \n                    <input type=\"text\" placeholder='enter url...' value={this.state.url} name=\"url\" onChange={this.handleChange}/>\n                <label> Meal Image Url:</label> \n                    <input type=\"text\" placeholder='enter image url...' value={this.state.image_url} name=\"image_url\" onChange={this.handleChange}/>\n                <label> Meal Cooking Time:</label> \n                    <input type=\"text\" placeholder='enter cooking time...' value={this.state.cooking_time} name=\"cooking_time\" onChange={this.handleChange}/>\n                        <button type=\"submit\">Create Meal</button>\n                    {/* {console.log('NewMealForm -> render -> this.state.image_url', this.state.image_url)}\n                    {console.log('NewMealForm -> render -> this.state.category', this.state.category)} */}\n            </form>  \n            {/* <DrillsContainer/>       */}\n            {/* <Route exact path='/meals' render={(routerProps) => <MealsList {...routerProps} meals={this.props.meals}/>}/> */}\n            {/* <MealsList/> */}\n            {/* <MealsList props={this.props}/> */}\n        </Fragment>  \n        );\n    }\n}\n\n\nexport default connect(null, {addMeal})(NewMealForm);\n// ! doesn't need mapStateToProps\n// ! doesn't need access to prop\n//  ! doesn;t need to know what is currently in store...only responsible for adding new meal and updating\n\n// ! instead of mapDispatchToProps we're calling {addRutine} and use the connect component","/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/actions/updateMeal.js",[],"/Users/LHD/Documents/rails-meal-manager/react_fe_mm/src/components/UpdateMealPage.js",["95","96","97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"100","replacedBy":"106"},{"ruleId":"102","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":17,"nodeType":"110","messageId":"111","endLine":11,"endColumn":23},{"ruleId":"108","severity":1,"message":"112","line":25,"column":17,"nodeType":"110","messageId":"111","endLine":25,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":26,"column":63,"nodeType":"115","messageId":"116","endLine":26,"endColumn":65},{"ruleId":"117","severity":1,"message":"118","line":35,"column":13,"nodeType":"119","messageId":"120","endLine":36,"endColumn":79},{"ruleId":"117","severity":1,"message":"118","line":52,"column":13,"nodeType":"119","messageId":"120","endLine":52,"endColumn":91},{"ruleId":"100","replacedBy":"121"},{"ruleId":"102","replacedBy":"122"},{"ruleId":"108","severity":1,"message":"123","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":17},{"ruleId":"108","severity":1,"message":"124","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":22},{"ruleId":"108","severity":1,"message":"125","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":14},{"ruleId":"108","severity":1,"message":"126","line":10,"column":14,"nodeType":"110","messageId":"111","endLine":10,"endColumn":19},{"ruleId":"108","severity":1,"message":"127","line":11,"column":10,"nodeType":"110","messageId":"111","endLine":11,"endColumn":18},{"ruleId":"108","severity":1,"message":"128","line":11,"column":20,"nodeType":"110","messageId":"111","endLine":11,"endColumn":31},{"ruleId":"108","severity":1,"message":"129","line":12,"column":10,"nodeType":"110","messageId":"111","endLine":12,"endColumn":13},{"ruleId":"108","severity":1,"message":"130","line":12,"column":15,"nodeType":"110","messageId":"111","endLine":12,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":32,"column":57,"nodeType":"115","messageId":"116","endLine":32,"endColumn":59},{"ruleId":"108","severity":1,"message":"131","line":42,"column":13,"nodeType":"110","messageId":"111","endLine":42,"endColumn":21},{"ruleId":"108","severity":1,"message":"132","line":63,"column":13,"nodeType":"110","messageId":"111","endLine":63,"endColumn":22},{"ruleId":"108","severity":1,"message":"133","line":108,"column":5,"nodeType":"110","messageId":"111","endLine":108,"endColumn":15},{"ruleId":"108","severity":1,"message":"134","line":3,"column":9,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"135","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":22},{"ruleId":"108","severity":1,"message":"136","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":38,"column":53,"nodeType":"115","messageId":"116","endLine":38,"endColumn":55},{"ruleId":"108","severity":1,"message":"134","line":3,"column":9,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"135","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":22},{"ruleId":"108","severity":1,"message":"136","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":12},{"ruleId":"108","severity":1,"message":"137","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":21,"column":49,"nodeType":"115","messageId":"116","endLine":21,"endColumn":51},{"ruleId":"108","severity":1,"message":"131","line":31,"column":9,"nodeType":"110","messageId":"111","endLine":31,"endColumn":17},{"ruleId":"108","severity":1,"message":"133","line":50,"column":9,"nodeType":"110","messageId":"111","endLine":50,"endColumn":19},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],"no-unused-vars","'mealId' is assigned a value but never used.","Identifier","unusedVar","'newData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["138"],["139"],"'Redirect' is defined but never used.","'UpdateMealForm' is defined but never used.","'name' is assigned a value but never used.","'setId' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'mealInfo' is assigned a value but never used.","'mealInfo2' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Meal' is defined but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]